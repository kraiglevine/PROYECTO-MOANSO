/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;

import com.lowagie.text.Document;
import com.lowagie.text.DocumentException;
import com.lowagie.text.pdf.PdfPTable;
import com.lowagie.text.pdf.PdfWriter;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.table.DefaultTableModel;
import models.Conexion;


/**
 *
 * @author Kraig
 */
public class Orden_Compra extends javax.swing.JFrame {

    /**
     * Creates new form Orden_Compra
     */
    public Orden_Compra() {
        initComponents();
        
        grupoBotones.add(rbtnFecha);
        grupoBotones.add(rbtnCliente);
    }
    

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        grupoBotones = new javax.swing.ButtonGroup();
        buttonGroup5 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbPedidos = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbOrden = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btnListar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        rbtnFecha = new javax.swing.JRadioButton();
        rbtnCliente = new javax.swing.JRadioButton();
        btnLimpiar = new javax.swing.JButton();
        txtCodigo = new javax.swing.JTextField();
        txtPedido = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btnGenerar = new javax.swing.JButton();
        btnListaOrden = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnImprimir = new javax.swing.JButton();
        btnAgregar = new javax.swing.JButton();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "GENERAR ORDEN DE COMPRA", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 14), new java.awt.Color(255, 153, 0))); // NOI18N

        tbPedidos.setForeground(new java.awt.Color(255, 153, 0));
        tbPedidos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "CODIGO", "CLIENTE", "PRODUCTO", "CANTIDAD", "FECHA"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbPedidos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbPedidosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbPedidos);
        if (tbPedidos.getColumnModel().getColumnCount() > 0) {
            tbPedidos.getColumnModel().getColumn(0).setResizable(false);
            tbPedidos.getColumnModel().getColumn(0).setPreferredWidth(10);
            tbPedidos.getColumnModel().getColumn(1).setResizable(false);
            tbPedidos.getColumnModel().getColumn(2).setResizable(false);
            tbPedidos.getColumnModel().getColumn(3).setResizable(false);
            tbPedidos.getColumnModel().getColumn(4).setResizable(false);
            tbPedidos.getColumnModel().getColumn(5).setResizable(false);
        }

        tbOrden.setForeground(new java.awt.Color(255, 153, 0));
        tbOrden.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "ORDEN", "PEDIDO"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tbOrden);
        if (tbOrden.getColumnModel().getColumnCount() > 0) {
            tbOrden.getColumnModel().getColumn(0).setResizable(false);
            tbOrden.getColumnModel().getColumn(0).setPreferredWidth(10);
            tbOrden.getColumnModel().getColumn(2).setResizable(false);
        }

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 153, 0));
        jLabel1.setText("LISTA DE PEDIDOS:");

        btnListar.setBackground(new java.awt.Color(255, 153, 0));
        btnListar.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btnListar.setForeground(new java.awt.Color(255, 255, 255));
        btnListar.setText("LISTAR PEDIDOS");
        btnListar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 153, 0));
        jLabel2.setText("PEDIDOS AGREGADOS A LA ORDEN:");

        jLabel3.setForeground(new java.awt.Color(255, 153, 0));
        jLabel3.setText("ID:");

        rbtnFecha.setBackground(new java.awt.Color(255, 255, 255));
        rbtnFecha.setForeground(new java.awt.Color(255, 153, 0));
        rbtnFecha.setText("POR FECHA");
        rbtnFecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnFechaActionPerformed(evt);
            }
        });

        rbtnCliente.setBackground(new java.awt.Color(255, 255, 255));
        rbtnCliente.setForeground(new java.awt.Color(255, 153, 0));
        rbtnCliente.setText("POR CLIENTE");
        rbtnCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnClienteActionPerformed(evt);
            }
        });

        btnLimpiar.setBackground(new java.awt.Color(255, 153, 0));
        btnLimpiar.setForeground(new java.awt.Color(255, 255, 255));
        btnLimpiar.setText("LIMPIAR");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        jLabel4.setForeground(new java.awt.Color(255, 153, 0));
        jLabel4.setText("ORDEN:");

        jLabel5.setForeground(new java.awt.Color(255, 153, 0));
        jLabel5.setText("PEDIDO:");

        btnGenerar.setText("...");
        btnGenerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarActionPerformed(evt);
            }
        });

        btnListaOrden.setBackground(new java.awt.Color(255, 153, 0));
        btnListaOrden.setForeground(new java.awt.Color(255, 255, 255));
        btnListaOrden.setText("LISTAR");
        btnListaOrden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListaOrdenActionPerformed(evt);
            }
        });

        btnEliminar.setBackground(new java.awt.Color(255, 153, 0));
        btnEliminar.setForeground(new java.awt.Color(255, 255, 255));
        btnEliminar.setText("ELIMINAR");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnImprimir.setBackground(new java.awt.Color(255, 153, 0));
        btnImprimir.setForeground(new java.awt.Color(255, 255, 255));
        btnImprimir.setText("IMPRIMIR");
        btnImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirActionPerformed(evt);
            }
        });

        btnAgregar.setBackground(new java.awt.Color(255, 153, 0));
        btnAgregar.setForeground(new java.awt.Color(255, 255, 255));
        btnAgregar.setText("AGREGAR");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel1)
                                        .addComponent(jLabel2))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addComponent(jLabel3)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel4)
                                                    .addComponent(jLabel5))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(txtPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                        .addGap(18, 18, 18)
                                        .addComponent(btnGenerar, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(btnListar, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(btnListaOrden, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(42, 42, 42)
                                    .addComponent(btnImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(rbtnFecha)
                                    .addComponent(rbtnCliente))
                                .addGap(0, 300, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 683, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 10, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addGap(10, 10, 10)
                        .addComponent(btnListar, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(rbtnFecha)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rbtnCliente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                        .addComponent(btnLimpiar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnGenerar)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(56, 56, 56)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnListaOrden, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(10, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarActionPerformed
        limpiar();
        DefaultTableModel modelo;
        modelo=(DefaultTableModel)tbPedidos.getModel();
        PreparedStatement ps= null;
        ResultSet rs=null;
        
        try {
            Conexion objCon=new Conexion();
            Connection con;
            con=Conexion.getConnection();
            ps=con.prepareStatement("SELECT ped_id, ped_codigo,cli_nombre,pro_especie,ped_cantidad,ped_fecha FROM pedido p INNER JOIN cliente c ON p.cliente_id=c.cli_id INNER JOIN producto r ON p.producto_id=r.pro_id");
            rs=ps.executeQuery();
            int cantidadRow=modelo.getColumnCount();
            while(rs.next()){
                Object [] filas = new Object[6];
                for(int i=0; i<cantidadRow;i++){
                    filas[i]=rs.getObject(i+1);
                }
                modelo.addRow(filas);  
            }
            
        } catch (Exception e) {
            System.out.println("error tabla pedido.... "+e);
        }
    }//GEN-LAST:event_btnListarActionPerformed

    private void rbtnFechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnFechaActionPerformed
        limpiar();
        DefaultTableModel modelo;
        modelo=(DefaultTableModel)tbPedidos.getModel();
        PreparedStatement ps= null;
        ResultSet rs=null;
        
        try {
            Conexion objCon=new Conexion();
            Connection con;
            con=Conexion.getConnection();
            ps=con.prepareStatement("SELECT ped_id, ped_codigo,cli_nombre,pro_especie,ped_cantidad,ped_fecha FROM pedido p INNER JOIN cliente c ON p.cliente_id=c.cli_id INNER JOIN producto r ON p.producto_id=r.pro_id ORDER BY p.ped_fecha DESC");
            rs=ps.executeQuery();
            int cantidadRow=modelo.getColumnCount();
            while(rs.next()){
                Object [] filas = new Object[6];
                for(int i=0; i<cantidadRow;i++){
                    filas[i]=rs.getObject(i+1);
                }
                modelo.addRow(filas);  
            }
            
        } catch (Exception e) {
            System.out.println("error tabla pedido.... "+e);
        }
    }//GEN-LAST:event_rbtnFechaActionPerformed

    private void rbtnClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnClienteActionPerformed
        limpiar();
        DefaultTableModel modelo;
        modelo=(DefaultTableModel)tbPedidos.getModel();
        PreparedStatement ps= null;
        ResultSet rs=null;
        
        try {
            Conexion objCon=new Conexion();
            Connection con;
            con=Conexion.getConnection();
            ps=con.prepareStatement("SELECT ped_id, ped_codigo,cli_nombre,pro_especie,ped_cantidad,ped_fecha FROM pedido p INNER JOIN cliente c ON p.cliente_id=c.cli_id INNER JOIN producto r ON p.producto_id=r.pro_id ORDER BY p.ped_fecha DESC,c.cli_nombre");
            rs=ps.executeQuery();
            int cantidadRow=modelo.getColumnCount();
            while(rs.next()){
                Object [] filas = new Object[6];
                for(int i=0; i<cantidadRow;i++){
                    filas[i]=rs.getObject(i+1);
                }
                modelo.addRow(filas);  
            }
            
        } catch (Exception e) {
            System.out.println("error tabla pedido.... "+e);
        }
    }//GEN-LAST:event_rbtnClienteActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        limpiar();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void tbPedidosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbPedidosMouseClicked
        DefaultTableModel model=(DefaultTableModel)tbPedidos.getModel();
        int selectedRowIndex=  tbPedidos.getSelectedRow();
        txtPedido.setText(model.getValueAt(selectedRowIndex, 0).toString());
    }//GEN-LAST:event_tbPedidosMouseClicked

    private void btnGenerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarActionPerformed
        PreparedStatement ps;
        ResultSet rs;
        
        try {
            Conexion objCon=new Conexion();
            Connection con;
            con=Conexion.getConnection();
            ps=con.prepareStatement("SELECT orden_id,orden_cod FROM orden WHERE orden_id=(SELECT MAX(orden_id) FROM orden)");
            rs=ps.executeQuery();
            while(rs.next()){
                int id;
                String codigo;
                id= rs.getInt(1);
                codigo=rs.getString(2);
                String code="";

                for (int i=0;i<codigo.length();i++){
                    if((codigo.charAt(i) != 'O'&&codigo.charAt(i) != 'C')){ 
                        code += codigo.charAt(i);
                    }  
                }
                int num= Integer.valueOf(code);
                int cod;
                cod=num+1;
                if(cod<10){
                    txtCodigo.setText("OC000"+cod);
                }
                if(cod>=10){
                    txtCodigo.setText("OC00"+cod);
                }
                if(cod>=100){
                    txtCodigo.setText("OC0"+cod);
                }
                int sum=id+1;
                txtId.setText(sum+"");
            }

        } catch (Exception e) {
            System.out.println("error codigo orden.... "+e);
        }
        btnGenerar.setEnabled(false);
    }//GEN-LAST:event_btnGenerarActionPerformed

    private void btnListaOrdenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListaOrdenActionPerformed
        listar();
    }//GEN-LAST:event_btnListaOrdenActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        agregarPedido();
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        DefaultTableModel modelo;
        modelo=(DefaultTableModel)tbOrden.getModel();
        PreparedStatement ps;
        ResultSet rs;
        int row=tbOrden.getSelectedRow();
        int id= Integer.parseInt(tbOrden.getValueAt(row, 0).toString());
        String sql="DELETE FROM orden WHERE orden_id ="+id;
        try {
            Conexion objCon=new Conexion();
            Connection con;
            con=Conexion.getConnection();
            ps=con.prepareStatement(sql);
            ps.executeUpdate();   
        } catch (Exception e) {
            System.err.println("Error eliminar"+e.getMessage());
        } 
        listar();
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirActionPerformed
        archivo();
        
    }//GEN-LAST:event_btnImprimirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        Orden_Compra vista=new Orden_Compra();
        vista.setVisible(true);
        vista.setLocationRelativeTo(null);
        vista.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
    }
    
    private void archivo(){
        String path="";
        JFileChooser j=new JFileChooser();
        j.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int x=j.showSaveDialog(this);
        
        if(x==JFileChooser.APPROVE_OPTION){
            path=j.getSelectedFile().getPath();
        }
        Document doc=new Document();
        
        try {
            PdfWriter.getInstance(doc,new FileOutputStream(path+"orden.pdf"));
            doc.open();
            PdfPTable tb1=new PdfPTable(3);
            tb1.addCell("ID");
            tb1.addCell("ORDEN");
            tb1.addCell("PEDIDO");
            
            for(int i=0; i<tbOrden.getRowCount();i++){
                String ID= tbOrden.getValueAt(i, 0).toString();
                String orden= tbOrden.getValueAt(i, 1).toString();
                String pedido= tbOrden.getValueAt(i, 2).toString();
                
                tb1.addCell(ID);
                tb1.addCell(orden);
                tb1.addCell(pedido);
            }
            doc.add(tb1);
          
        } catch (FileNotFoundException | DocumentException ex) {
            Logger.getLogger(Orden_Compra.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("error..."+ex);
        }
        
        doc.close();
    }
    
    private void limpiar(){
        DefaultTableModel modelo;
        modelo=(DefaultTableModel)tbPedidos.getModel();
        for(int i=0;i<tbPedidos.getRowCount();i++){
            modelo.removeRow(i);
            i=i-1;
        }
    }
    
    private void limpiarOrden(){
        DefaultTableModel modelo;
        modelo=(DefaultTableModel)tbOrden.getModel();
        for(int i=0;i<tbOrden.getRowCount();i++){
            modelo.removeRow(i);
            i=i-1;
        }
    }
    
    private void listar(){
        limpiarOrden();
        DefaultTableModel modelo;
        modelo=(DefaultTableModel)tbOrden.getModel();
        PreparedStatement ps;
        ResultSet rs;
        try {
            Conexion objCon=new Conexion();
            Connection con;
            con=Conexion.getConnection();
            ps=con.prepareStatement("SELECT orden_id,orden_cod,ped_codigo FROM orden o INNER JOIN pedido p ON o.pedido_id=p.ped_id");
            rs= ps.executeQuery();
            int cantidadRow= modelo.getColumnCount();
            while(rs.next()){
                Object [] filas = new Object[4];
                for(int i=0; i<cantidadRow;i++){
                    filas[i]=rs.getObject(i+1);
                }
                modelo.addRow(filas);
            }
        } catch (Exception e) {
            System.out.println("error tabla orden.... "+e);
        }
        
    }
    
    private void agregarPedido(){
        PreparedStatement ps;
        ResultSet rs;
        String sql="INSERT INTO orden VALUES(?,?,?)";
        int id= Integer.parseInt(txtId.getText());
        
        try {
            Conexion objCon=new Conexion();
            Connection con;
            con=Conexion.getConnection();
            ps=con.prepareStatement(sql);
            ps.setInt(1, id);
            ps.setString(2, txtCodigo.getText());
            ps.setString(3, txtPedido.getText());
            ps.executeUpdate();  
        } catch (Exception e) {
            System.out.println("error agregar orden... "+e);
        }
        String n;
        n=txtId.getText();
        int num=Integer.parseInt(n);
        num+=1;
        txtId.setText("");
        txtId.setText(num+"");

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton btnAgregar;
    public javax.swing.JButton btnEliminar;
    public javax.swing.JButton btnGenerar;
    public javax.swing.JButton btnImprimir;
    public javax.swing.JButton btnLimpiar;
    public javax.swing.JButton btnListaOrden;
    public javax.swing.JButton btnListar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup5;
    public javax.swing.ButtonGroup grupoBotones;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JRadioButton rbtnCliente;
    private javax.swing.JRadioButton rbtnFecha;
    public javax.swing.JTable tbOrden;
    public javax.swing.JTable tbPedidos;
    public javax.swing.JTextField txtCodigo;
    public javax.swing.JTextField txtId;
    public javax.swing.JTextField txtPedido;
    // End of variables declaration//GEN-END:variables
}

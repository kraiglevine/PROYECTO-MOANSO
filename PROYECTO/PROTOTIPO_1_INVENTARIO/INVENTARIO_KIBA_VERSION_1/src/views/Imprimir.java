/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;

import com.lowagie.text.Document;
import com.lowagie.text.DocumentException;
import com.lowagie.text.pdf.PdfPTable;
import com.lowagie.text.pdf.PdfWriter;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.table.DefaultTableModel;
import models.Conexion;

/**
 *
 * @author Kraig
 */
public class Imprimir extends javax.swing.JFrame {

    /**
     * Creates new form Imprimir
     */
    public Imprimir() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbImprimir = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtFiltrarCodigo = new javax.swing.JTextField();
        btnImprimir = new javax.swing.JButton();
        btnFiltrarCodigo = new javax.swing.JButton();
        btnListar1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new java.awt.BorderLayout());
        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(682, 413, -1, -1));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "GUARDAR PDF", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 14), new java.awt.Color(255, 153, 0))); // NOI18N

        tbImprimir.setBackground(new java.awt.Color(255, 255, 255));
        tbImprimir.setForeground(new java.awt.Color(102, 102, 102));
        tbImprimir.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ORDEN ID", "CODIGO", "PEDIDO", "NOMBRE", "APELLIDO", "ESPECIE", "CANTIDAD", "FECHA"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbImprimir);
        if (tbImprimir.getColumnModel().getColumnCount() > 0) {
            tbImprimir.getColumnModel().getColumn(0).setResizable(false);
            tbImprimir.getColumnModel().getColumn(0).setPreferredWidth(5);
            tbImprimir.getColumnModel().getColumn(1).setResizable(false);
            tbImprimir.getColumnModel().getColumn(1).setPreferredWidth(10);
            tbImprimir.getColumnModel().getColumn(2).setResizable(false);
            tbImprimir.getColumnModel().getColumn(2).setPreferredWidth(10);
            tbImprimir.getColumnModel().getColumn(3).setResizable(false);
            tbImprimir.getColumnModel().getColumn(3).setPreferredWidth(10);
            tbImprimir.getColumnModel().getColumn(4).setResizable(false);
            tbImprimir.getColumnModel().getColumn(4).setPreferredWidth(10);
            tbImprimir.getColumnModel().getColumn(5).setResizable(false);
            tbImprimir.getColumnModel().getColumn(5).setPreferredWidth(10);
            tbImprimir.getColumnModel().getColumn(6).setResizable(false);
            tbImprimir.getColumnModel().getColumn(6).setPreferredWidth(10);
            tbImprimir.getColumnModel().getColumn(7).setResizable(false);
            tbImprimir.getColumnModel().getColumn(7).setPreferredWidth(10);
        }

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "FILTRAR CAMPOS", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 14), new java.awt.Color(255, 153, 0))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 153, 0));
        jLabel1.setText("FILTRAR CODIGO:");

        btnImprimir.setBackground(new java.awt.Color(255, 153, 0));
        btnImprimir.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btnImprimir.setForeground(new java.awt.Color(255, 255, 255));
        btnImprimir.setText("GUARDAR");
        btnImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirActionPerformed(evt);
            }
        });

        btnFiltrarCodigo.setBackground(new java.awt.Color(255, 153, 0));
        btnFiltrarCodigo.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btnFiltrarCodigo.setForeground(new java.awt.Color(255, 255, 255));
        btnFiltrarCodigo.setText("FILTRAR CODIGO");
        btnFiltrarCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFiltrarCodigoActionPerformed(evt);
            }
        });

        btnListar1.setBackground(new java.awt.Color(255, 153, 0));
        btnListar1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btnListar1.setForeground(new java.awt.Color(255, 255, 255));
        btnListar1.setText("LISTAR COMPLETO");
        btnListar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListar1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(txtFiltrarCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnFiltrarCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(118, 118, 118)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnListar1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnImprimir, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(62, 62, 62))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtFiltrarCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(btnFiltrarCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 23, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnListar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnImprimir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(6, 6, 6)))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 660, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 14, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 440));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnListar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListar1ActionPerformed
        limpiar();
        DefaultTableModel modelo1;
        modelo1=(DefaultTableModel)tbImprimir.getModel();
        PreparedStatement ps;
        ResultSet rs;
        
        try {
            Conexion objCon=new Conexion();
            Connection con;
            con=Conexion.getConnection();
            ps=con.prepareStatement("SELECT orden_id,orden_cod,ped_codigo,cli_nombre,cli_apellido,pro_especie,ped_cantidad,ped_fecha FROM orden o INNER JOIN pedido p ON o.pedido_id=p.ped_id INNER JOIN cliente c ON c.cli_id=p.cliente_id INNER JOIN producto r ON r.pro_id=p.producto_id ORDER BY o.orden_id ASC");
            rs=ps.executeQuery();
            int cantidadRow=modelo1.getColumnCount();
            while(rs.next()){
                Object [] filas = new Object[8];
                for(int i=0; i<cantidadRow;i++){
                    filas[i]=rs.getObject(i+1);
                }
                modelo1.addRow(filas);  
            }
            
        } catch (Exception e) {
            System.out.println("error tabla pedido.... "+e);
        }
    }//GEN-LAST:event_btnListar1ActionPerformed

    private void btnFiltrarCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFiltrarCodigoActionPerformed
        limpiar();
        DefaultTableModel modelo;
        modelo=(DefaultTableModel)tbImprimir.getModel();
        PreparedStatement ps;
        ResultSet rs;
        
        try {
            String cod=txtFiltrarCodigo.getText();
            Conexion objCon=new Conexion();
            Connection con;
            con=Conexion.getConnection();
            ps=con.prepareStatement("SELECT orden_id,orden_cod,ped_codigo,cli_nombre,cli_apellido,pro_especie,ped_cantidad,ped_fecha FROM orden o INNER JOIN pedido p ON o.pedido_id=p.ped_id INNER JOIN cliente c ON c.cli_id=p.cliente_id INNER JOIN producto r ON r.pro_id=p.producto_id WHERE o.orden_cod=?");
            ps.setString(1, cod);
            rs=ps.executeQuery();
            int cantidadRow=modelo.getColumnCount();
            while(rs.next()){
                Object [] filas = new Object[8];
                for(int i=0; i<cantidadRow;i++){
                    filas[i]=rs.getObject(i+1);
                }
                modelo.addRow(filas);  
            }
            
        } catch (Exception e) {
            System.out.println("error tabla pedido.... "+e);
        }
    }//GEN-LAST:event_btnFiltrarCodigoActionPerformed

    private void btnImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirActionPerformed
        String path="";
        JFileChooser j=new JFileChooser();
        j.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int x=j.showSaveDialog(this);
        
        if(x==JFileChooser.APPROVE_OPTION){
            path=j.getSelectedFile().getPath();
        }
        Document doc=new Document();
        
        try {
            PdfWriter.getInstance(doc,new FileOutputStream(path+"orden.pdf"));
            doc.open();
            
            PdfPTable tb1=new PdfPTable(8);
            tb1.addCell("ID");
            tb1.addCell("Orden");
            tb1.addCell("Pedido");
            tb1.addCell("Nombre");
            tb1.addCell("Apellido");
            tb1.addCell("Especie");
            tb1.addCell("Cantidad");
            tb1.addCell("Fecha");
            
            for(int i=0; i<tbImprimir.getRowCount();i++){
                String ID= tbImprimir.getValueAt(i, 0).toString();
                String orden= tbImprimir.getValueAt(i, 1).toString();
                String pedido= tbImprimir.getValueAt(i, 2).toString();
                String nombre= tbImprimir.getValueAt(i, 3).toString();
                String apellido= tbImprimir.getValueAt(i, 4).toString();
                String especie= tbImprimir.getValueAt(i, 5).toString();
                String cantidad= tbImprimir.getValueAt(i, 6).toString();
                String fecha= tbImprimir.getValueAt(i, 7).toString();
                
                tb1.addCell(ID);
                tb1.addCell(orden);
                tb1.addCell(pedido);
                tb1.addCell(nombre);
                tb1.addCell(apellido);
                tb1.addCell(especie);
                tb1.addCell(cantidad);
                tb1.addCell(fecha);
            }
            doc.add(tb1);
          
        } catch (FileNotFoundException | DocumentException ex) {
            Logger.getLogger(Orden_Compra.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("error..."+ex);
        }
        
        doc.close();
    }//GEN-LAST:event_btnImprimirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        Imprimir vista=new Imprimir();
        vista.setVisible(true);
        vista.setLocationRelativeTo(null);
        vista.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
    }
    
    public void limpiar(){
        DefaultTableModel modelo;
        modelo=(DefaultTableModel)tbImprimir.getModel();
        for(int i=0;i<tbImprimir.getRowCount();i++){
            modelo.removeRow(i);
            i=i-1;
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton btnFiltrarCodigo;
    public javax.swing.JButton btnImprimir;
    public javax.swing.JButton btnListar1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTable tbImprimir;
    public javax.swing.JTextField txtFiltrarCodigo;
    // End of variables declaration//GEN-END:variables
}
